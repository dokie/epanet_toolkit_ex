#
# Copyright © Inflowmatix Limited 2020-2023
# Copyright © arboricity™ 2020-2023
#
name: "On Merge to master - Build, Test, Build Container and Deploy CI"

on:
  push:
    branches:
      - master

jobs:
  build_and_test:
    uses: ./.github/workflows/build_and_test.yml
    secrets:
      HEX_API_KEY: ${{ secrets.HEX_API_KEY }}

  docker_build:
    name: Docker build Elixir service
    runs-on: ubuntu-latest
    needs: build_and_test
    env:
      GCP_PROD_PROJECT: congruity-prod
      GITHUB_SHA: ${{ github.sha }}
      GITHUB_REF: ${{ github.ref }}
      HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
      IMAGE: "eu.gcr.io/congruity-prod/<<image name here>>"
    outputs:
      image_tag: ${{ steps.output_image_tag.outputs.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033 # v1.1.1
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b # v1.1.1

        # Configure docker to use the gcloud command-line tool as a credential helper
      - name: "Setup Docker for GCR"
        run: |
          gcloud --quiet auth configure-docker

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@ecf95283f03858871ff00b787d79c419715afc34 # v2.7.0
        with:
          version: latest

      - name: "Parse App Version"
        run: |-
          echo 'PACKAGE_JSON<<EOF' >> $GITHUB_ENV
          cat ./package.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: "Determine Build Version"
        run: |-
          VERSION=${{ fromJson(env.PACKAGE_JSON).version }}
          SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-7)
          TAG=$VERSION"_"$SHA_SHORT
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: "Get Image Metadata"
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4.6.0
        with:
          images: ${{ env.IMAGE }}
          labels: |
            org.opencontainers.image.title=<<image title here>
            org.opencontainers.image.description=<<image description here>
            org.opencontainers.image.vendor=Inflowmatix
          tags: |
            type=raw,${{ env.TAG }}
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

      - name: "Build and push image tags"
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4.1.1
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GITHUB_SHA=${{ secrets.GITHUB_SHA }}
            GITHUB_REF=${{ secrets.GITHUB_REF }}
            HEX_API_KEY=${{ secrets.HEX_API_KEY }}

      - name: "Output image tag"
        id: output_image_tag
        run: |
          echo "::set-output name=image_tag::${{ env.TAG }}"

  deployment:
    name: Deployment of Elixir service
    runs-on: ubuntu-latest
    needs: docker_build
    env:
      SERVICE_NAME: "<<service name here>"
      IMAGE: "eu.gcr.io/congruity-prod/<<image name here>"
      HELM_REPO: "arboricity/arboricity-helm-releases"
    steps:
      - name: "Checkout Releases Repo"
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          repository: ${{ env.HELM_REPO }}
          token: ${{ secrets.GH_TOKEN }} # `GH_TOKEN` is a secret that contains PersonalAccessToken ( Use Github App to get a token)
          ref: master

      - name: "Update Service Tag Version"
        id: update-service-tag
        uses: mikefarah/yq@5ef537f3fd1a9437aa3ee44c32c6459a126efdc4 # v4.34.1
        with:
          cmd: yq -i 'with(.image.tag ; . = "${{ needs.docker_build.outputs.image_tag }}" | . style="")' ${{ env.SERVICE_NAME }}/values.yaml

      - name: "Commit updates directly to master branch on HELM_REPO"
        run: |
          git config --global user.name "congruity-machine-user"
          git config --global user.email "congruity@arboricity.com"
          git add -A
          git commit -am "Automated GH Action Deployment: ${{ env.SERVICE_NAME }} Tag:${{ needs.docker_build.outputs.image_tag }}"
          git push origin master
